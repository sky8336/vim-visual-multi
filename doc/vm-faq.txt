*vm-faq.txt*    Version 0.3.0    Last change: June 15 2019

FREQUENTLY ASKED QUESTIONS                                   *visual-multi-faq*
===============================================================================

                                                             *vm-faq-functions*
How can I do something before VM starts, or after VM ends? ~

You can create these functions: >
  function! VM_Start()
  function! VM_Exit()
<
Or you can rely on a user autocommand:  >
  autocmd User visual_multi_start   call MyVmStart()
  autocmd User visual_multi_exit    call MyVmExit()
<


                                                      *vm-faq-disable-mappings*
How can I temporarily disable VM mappings? ~

VM has a <Plug> for that. Normally it is bound to |VM_leader| + <Space>, but
unless you use <Space> as |VM_leader|, you may prefer an easier mapping:
>
  let g:VM_maps["Toggle Mappings"] = '<Space>'
<


                                                                 *vm-faq-remap*
How can I remap x in VM? ~

There are two ways: either do a remap using the functions above, e.g.:  >
  function! VM_Start()
    nmap <buffer> <C-C> <Esc>
    imap <buffer> <C-C> <Esc>
  endfunction

  function! VM_Exit()
    nunmap <buffer> <C-C>
    iunmap <buffer> <C-C>
  endfunction
<
or use |g:VM_custom_remaps| (normal mode only), e.g.:  >
  let g:VM_custom_remaps = {'<c-p>': 'N', '<c-s>': 'q'}
<
This will preserve the function of the original mapping. If you want to replace
it entirely, see |g:VM_maps|.



                                                     *vm-faq-creative-mappings*
Can I have a mapping for...? ~

If you find yourself repeating a certain action, you can create mappings like:
>
  nmap cp vip<Plug>(VM-Visual-Cursors)
<
This would create a column of cursors that spans the current inner paragraph.
>
  nmap \v <Plug>(VM-Start-Regex-Search)<Up><CR>
  nmap \V <Plug>(VM-Start-Regex-Search)<Up><CR><Plug>(VM-Select-All)
<
The first mapping would start VM by selecting the first occurrence of the
current search register (|@/|). The second one would select all matches.




 vim: ft=help et sw=2 ts=2 sts=2 tw=79
